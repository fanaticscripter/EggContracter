// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: api/egginc.proto

package api

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EggType int32

const (
	EggType_INVALID_EGG    EggType = 0 // proto3 requires first enum value to be 0.
	EggType_EDIBLE         EggType = 1
	EggType_SUPERFOOD      EggType = 2
	EggType_MEDICAL        EggType = 3
	EggType_ROCKET_FUEL    EggType = 4
	EggType_SUPER_MATERIAL EggType = 5
	EggType_FUSION         EggType = 6
	EggType_QUANTUM        EggType = 7
	EggType_IMMORTALITY    EggType = 8
	EggType_TACHYON        EggType = 9
	EggType_GRAVITON       EggType = 10
	EggType_DILITHIUM      EggType = 11
	EggType_PRODIGY        EggType = 12
	EggType_TERRAFORM      EggType = 13
	EggType_ANTIMATTER     EggType = 14
	EggType_DARK_MATTER    EggType = 15
	EggType_AI             EggType = 16
	EggType_NEBULA         EggType = 17
	EggType_UNIVERSE       EggType = 18
	EggType_ENLIGHTENMENT  EggType = 19
	// Contract-only eggs.
	EggType_CHOCOLATE    EggType = 100
	EggType_EASTER       EggType = 101
	EggType_WATERBALLOON EggType = 102
	EggType_FIREWORK     EggType = 103
	EggType_PUMPKIN      EggType = 104
	// Placeholder for undiscovered eggs.
	EggType_UNKNOWN EggType = 1000
)

// Enum value maps for EggType.
var (
	EggType_name = map[int32]string{
		0:    "INVALID_EGG",
		1:    "EDIBLE",
		2:    "SUPERFOOD",
		3:    "MEDICAL",
		4:    "ROCKET_FUEL",
		5:    "SUPER_MATERIAL",
		6:    "FUSION",
		7:    "QUANTUM",
		8:    "IMMORTALITY",
		9:    "TACHYON",
		10:   "GRAVITON",
		11:   "DILITHIUM",
		12:   "PRODIGY",
		13:   "TERRAFORM",
		14:   "ANTIMATTER",
		15:   "DARK_MATTER",
		16:   "AI",
		17:   "NEBULA",
		18:   "UNIVERSE",
		19:   "ENLIGHTENMENT",
		100:  "CHOCOLATE",
		101:  "EASTER",
		102:  "WATERBALLOON",
		103:  "FIREWORK",
		104:  "PUMPKIN",
		1000: "UNKNOWN",
	}
	EggType_value = map[string]int32{
		"INVALID_EGG":    0,
		"EDIBLE":         1,
		"SUPERFOOD":      2,
		"MEDICAL":        3,
		"ROCKET_FUEL":    4,
		"SUPER_MATERIAL": 5,
		"FUSION":         6,
		"QUANTUM":        7,
		"IMMORTALITY":    8,
		"TACHYON":        9,
		"GRAVITON":       10,
		"DILITHIUM":      11,
		"PRODIGY":        12,
		"TERRAFORM":      13,
		"ANTIMATTER":     14,
		"DARK_MATTER":    15,
		"AI":             16,
		"NEBULA":         17,
		"UNIVERSE":       18,
		"ENLIGHTENMENT":  19,
		"CHOCOLATE":      100,
		"EASTER":         101,
		"WATERBALLOON":   102,
		"FIREWORK":       103,
		"PUMPKIN":        104,
		"UNKNOWN":        1000,
	}
)

func (x EggType) Enum() *EggType {
	p := new(EggType)
	*p = x
	return p
}

func (x EggType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EggType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_egginc_proto_enumTypes[0].Descriptor()
}

func (EggType) Type() protoreflect.EnumType {
	return &file_api_egginc_proto_enumTypes[0]
}

func (x EggType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EggType.Descriptor instead.
func (EggType) EnumDescriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{0}
}

type TrophyType int32

const (
	TrophyType_NO_TROPHY TrophyType = 0
	TrophyType_BRONZE    TrophyType = 1
	TrophyType_SILVER    TrophyType = 2
	TrophyType_GOLD      TrophyType = 3
	TrophyType_PLATINUM  TrophyType = 4
	TrophyType_DIAMOND   TrophyType = 5
)

// Enum value maps for TrophyType.
var (
	TrophyType_name = map[int32]string{
		0: "NO_TROPHY",
		1: "BRONZE",
		2: "SILVER",
		3: "GOLD",
		4: "PLATINUM",
		5: "DIAMOND",
	}
	TrophyType_value = map[string]int32{
		"NO_TROPHY": 0,
		"BRONZE":    1,
		"SILVER":    2,
		"GOLD":      3,
		"PLATINUM":  4,
		"DIAMOND":   5,
	}
)

func (x TrophyType) Enum() *TrophyType {
	p := new(TrophyType)
	*p = x
	return p
}

func (x TrophyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrophyType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_egginc_proto_enumTypes[1].Descriptor()
}

func (TrophyType) Type() protoreflect.EnumType {
	return &file_api_egginc_proto_enumTypes[1]
}

func (x TrophyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrophyType.Descriptor instead.
func (TrophyType) EnumDescriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1}
}

type RewardType int32

const (
	RewardType_INVALID_REWARD RewardType = 0 // proto3 requires first enum value to be 0.
	// Never encountered 1.
	RewardType_GOLDEN_EGG       RewardType = 2
	RewardType_SOUL_EGG         RewardType = 3
	RewardType_PROPHECY_EGG     RewardType = 4
	RewardType_EPIC_RESEARCH    RewardType = 5
	RewardType_PIGGY_GOLDEN_EGG RewardType = 6
	RewardType_PIGGY_MULTIPLY   RewardType = 7 // e.g. xmas-trash "Quantum Trash Bag"
	// (type:7, name:"subtype", count:2)
	RewardType_PIGGY_LEVEL_UP RewardType = 8
	RewardType_BOOST          RewardType = 9
)

// Enum value maps for RewardType.
var (
	RewardType_name = map[int32]string{
		0: "INVALID_REWARD",
		2: "GOLDEN_EGG",
		3: "SOUL_EGG",
		4: "PROPHECY_EGG",
		5: "EPIC_RESEARCH",
		6: "PIGGY_GOLDEN_EGG",
		7: "PIGGY_MULTIPLY",
		8: "PIGGY_LEVEL_UP",
		9: "BOOST",
	}
	RewardType_value = map[string]int32{
		"INVALID_REWARD":   0,
		"GOLDEN_EGG":       2,
		"SOUL_EGG":         3,
		"PROPHECY_EGG":     4,
		"EPIC_RESEARCH":    5,
		"PIGGY_GOLDEN_EGG": 6,
		"PIGGY_MULTIPLY":   7,
		"PIGGY_LEVEL_UP":   8,
		"BOOST":            9,
	}
)

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}

func (x RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_egginc_proto_enumTypes[2].Descriptor()
}

func (RewardType) Type() protoreflect.EnumType {
	return &file_api_egginc_proto_enumTypes[2]
}

func (x RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardType.Descriptor instead.
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{2}
}

// http://www.auxbrain.com/ei/first_contact
type FirstContactRequestPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ClientVersion int32  `protobuf:"varint,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"` // optional
	X3            int32  `protobuf:"varint,3,opt,name=_3,json=3,proto3" json:"_3,omitempty"`                                     // unknown; example: 1
}

func (x *FirstContactRequestPayload) Reset() {
	*x = FirstContactRequestPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContactRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContactRequestPayload) ProtoMessage() {}

func (x *FirstContactRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContactRequestPayload.ProtoReflect.Descriptor instead.
func (*FirstContactRequestPayload) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{0}
}

func (x *FirstContactRequestPayload) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *FirstContactRequestPayload) GetClientVersion() int32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

func (x *FirstContactRequestPayload) GetX3() int32 {
	if x != nil {
		return x.X3
	}
	return 0
}

// Partially reverse engineered.
type FirstContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *FirstContact_Payload `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FirstContact) Reset() {
	*x = FirstContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact) ProtoMessage() {}

func (x *FirstContact) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact.ProtoReflect.Descriptor instead.
func (*FirstContact) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1}
}

func (x *FirstContact) GetData() *FirstContact_Payload {
	if x != nil {
		return x.Data
	}
	return nil
}

type Farm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EggType          EggType `protobuf:"varint,1,opt,name=egg_type,json=eggType,proto3,enum=EggType" json:"egg_type,omitempty"`
	PrestigeEarnings float64 `protobuf:"fixed64,2,opt,name=prestige_earnings,json=prestigeEarnings,proto3" json:"prestige_earnings,omitempty"`
	X3               float64 `protobuf:"fixed64,3,opt,name=_3,json=3,proto3" json:"_3,omitempty"` // on the same order of prestige_earnings but smaller,
	// not sure what it is; gift earnings maybe?
	LastSaved    float64 `protobuf:"fixed64,5,opt,name=last_saved,json=lastSaved,proto3" json:"last_saved,omitempty"` // epoch timestamp
	ChickenCount int64   `protobuf:"varint,6,opt,name=chicken_count,json=chickenCount,proto3" json:"chicken_count,omitempty"`
	EggsLaid     float64 `protobuf:"fixed64,9,opt,name=eggs_laid,json=eggsLaid,proto3" json:"eggs_laid,omitempty"`
	EggsPaidFor  float64 `protobuf:"fixed64,10,opt,name=eggs_paid_for,json=eggsPaidFor,proto3" json:"eggs_paid_for,omitempty"` // the only difference with eggs_laid seems to be
	// that eggs_laid is not rounded, and this is
	// rounded down.
	SilosOwned         int32       `protobuf:"varint,11,opt,name=silos_owned,json=silosOwned,proto3" json:"silos_owned,omitempty"`
	HabitatTypes       []int32     `protobuf:"varint,12,rep,packed,name=habitat_types,json=habitatTypes,proto3" json:"habitat_types,omitempty"`
	HabitatPopulations []int64     `protobuf:"varint,13,rep,packed,name=habitat_populations,json=habitatPopulations,proto3" json:"habitat_populations,omitempty"`
	VehicleTypes       []int32     `protobuf:"varint,17,rep,packed,name=vehicle_types,json=vehicleTypes,proto3" json:"vehicle_types,omitempty"`
	TrainLengths       []int32     `protobuf:"varint,21,rep,packed,name=train_lengths,json=trainLengths,proto3" json:"train_lengths,omitempty"`
	Researches         []*Research `protobuf:"bytes,18,rep,name=researches,proto3" json:"researches,omitempty"`
	ContractId         string      `protobuf:"bytes,20,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"` // empty for home farm
}

func (x *Farm) Reset() {
	*x = Farm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Farm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Farm) ProtoMessage() {}

func (x *Farm) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Farm.ProtoReflect.Descriptor instead.
func (*Farm) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{2}
}

func (x *Farm) GetEggType() EggType {
	if x != nil {
		return x.EggType
	}
	return EggType_INVALID_EGG
}

func (x *Farm) GetPrestigeEarnings() float64 {
	if x != nil {
		return x.PrestigeEarnings
	}
	return 0
}

func (x *Farm) GetX3() float64 {
	if x != nil {
		return x.X3
	}
	return 0
}

func (x *Farm) GetLastSaved() float64 {
	if x != nil {
		return x.LastSaved
	}
	return 0
}

func (x *Farm) GetChickenCount() int64 {
	if x != nil {
		return x.ChickenCount
	}
	return 0
}

func (x *Farm) GetEggsLaid() float64 {
	if x != nil {
		return x.EggsLaid
	}
	return 0
}

func (x *Farm) GetEggsPaidFor() float64 {
	if x != nil {
		return x.EggsPaidFor
	}
	return 0
}

func (x *Farm) GetSilosOwned() int32 {
	if x != nil {
		return x.SilosOwned
	}
	return 0
}

func (x *Farm) GetHabitatTypes() []int32 {
	if x != nil {
		return x.HabitatTypes
	}
	return nil
}

func (x *Farm) GetHabitatPopulations() []int64 {
	if x != nil {
		return x.HabitatPopulations
	}
	return nil
}

func (x *Farm) GetVehicleTypes() []int32 {
	if x != nil {
		return x.VehicleTypes
	}
	return nil
}

func (x *Farm) GetTrainLengths() []int32 {
	if x != nil {
		return x.TrainLengths
	}
	return nil
}

func (x *Farm) GetResearches() []*Research {
	if x != nil {
		return x.Researches
	}
	return nil
}

func (x *Farm) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type Research struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Research) Reset() {
	*x = Research{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Research) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Research) ProtoMessage() {}

func (x *Research) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Research.ProtoReflect.Descriptor instead.
func (*Research) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{3}
}

func (x *Research) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Research) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type EpicResearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *EpicResearch) Reset() {
	*x = EpicResearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpicResearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpicResearch) ProtoMessage() {}

func (x *EpicResearch) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpicResearch.ProtoReflect.Descriptor instead.
func (*EpicResearch) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{4}
}

func (x *EpicResearch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EpicResearch) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Props              *ContractProperties `protobuf:"bytes,1,opt,name=props,proto3" json:"props,omitempty"`
	Code               string              `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Started            float64             `protobuf:"fixed64,3,opt,name=started,proto3" json:"started,omitempty"`                                                 // epoch timestamp
	X4                 int32               `protobuf:"varint,4,opt,name=_4,json=4,proto3" json:"_4,omitempty"`                                                     // unknown; example: 1
	ProductionDeadline float64             `protobuf:"fixed64,5,opt,name=production_deadline,json=productionDeadline,proto3" json:"production_deadline,omitempty"` // epoch timestamp
	CompletedGoal      float64             `protobuf:"fixed64,6,opt,name=completed_goal,json=completedGoal,proto3" json:"completed_goal,omitempty"`
	X7                 int32               `protobuf:"varint,7,opt,name=_7,json=7,proto3" json:"_7,omitempty"`                                                     // unknown; example: 1
	CollectionDeadline float64             `protobuf:"fixed64,9,opt,name=collection_deadline,json=collectionDeadline,proto3" json:"collection_deadline,omitempty"` // epoch timestamp
	// 2 days after production deadline
	X10                int32   `protobuf:"varint,10,opt,name=_10,json=10,proto3" json:"_10,omitempty"` // unknown; example: 10
	PlayerContribution float64 `protobuf:"fixed64,11,opt,name=player_contribution,json=playerContribution,proto3" json:"player_contribution,omitempty"`
	PlayerId           string  `protobuf:"bytes,13,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	NumGoalsCompleted  int32   `protobuf:"varint,14,opt,name=num_goals_completed,json=numGoalsCompleted,proto3" json:"num_goals_completed,omitempty"`
	X15                int32   `protobuf:"varint,15,opt,name=_15,json=15,proto3" json:"_15,omitempty"` // unknown; example: 1
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{5}
}

func (x *Contract) GetProps() *ContractProperties {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Contract) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Contract) GetStarted() float64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *Contract) GetX4() int32 {
	if x != nil {
		return x.X4
	}
	return 0
}

func (x *Contract) GetProductionDeadline() float64 {
	if x != nil {
		return x.ProductionDeadline
	}
	return 0
}

func (x *Contract) GetCompletedGoal() float64 {
	if x != nil {
		return x.CompletedGoal
	}
	return 0
}

func (x *Contract) GetX7() int32 {
	if x != nil {
		return x.X7
	}
	return 0
}

func (x *Contract) GetCollectionDeadline() float64 {
	if x != nil {
		return x.CollectionDeadline
	}
	return 0
}

func (x *Contract) GetX10() int32 {
	if x != nil {
		return x.X10
	}
	return 0
}

func (x *Contract) GetPlayerContribution() float64 {
	if x != nil {
		return x.PlayerContribution
	}
	return 0
}

func (x *Contract) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Contract) GetNumGoalsCompleted() int32 {
	if x != nil {
		return x.NumGoalsCompleted
	}
	return 0
}

func (x *Contract) GetX15() int32 {
	if x != nil {
		return x.X15
	}
	return 0
}

// ContractProperties contains player/session-agnostic properties of a contract.
type ContractProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EggType EggType                      `protobuf:"varint,2,opt,name=egg_type,json=eggType,proto3,enum=EggType" json:"egg_type,omitempty"`
	Rewards []*ContractProperties_Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"` // seems always for elite
	// for standard rewards, check reward_tiers[1]
	CoopAllowed      bool                             `protobuf:"varint,4,opt,name=coop_allowed,json=coopAllowed,proto3" json:"coop_allowed,omitempty"`
	MaxCoopSize      int32                            `protobuf:"varint,5,opt,name=max_coop_size,json=maxCoopSize,proto3" json:"max_coop_size,omitempty"`
	ExpiryTimestamp  float64                          `protobuf:"fixed64,6,opt,name=expiry_timestamp,json=expiryTimestamp,proto3" json:"expiry_timestamp,omitempty"`
	DurationSeconds  float64                          `protobuf:"fixed64,7,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // total time to complete
	Name             string                           `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                           `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Debug            bool                             `protobuf:"varint,11,opt,name=debug,proto3" json:"debug,omitempty"`
	MaxBoosts        int32                            `protobuf:"varint,12,opt,name=max_boosts,json=maxBoosts,proto3" json:"max_boosts,omitempty"`
	MaxSoulEggs      float64                          `protobuf:"fixed64,13,opt,name=max_soul_eggs,json=maxSoulEggs,proto3" json:"max_soul_eggs,omitempty"`
	MinClientVersion int32                            `protobuf:"varint,14,opt,name=min_client_version,json=minClientVersion,proto3" json:"min_client_version,omitempty"`
	TokenInterval    float64                          `protobuf:"fixed64,15,opt,name=token_interval,json=tokenInterval,proto3" json:"token_interval,omitempty"` // token interval in minutes
	RewardTiers      []*ContractProperties_RewardTier `protobuf:"bytes,16,rep,name=reward_tiers,json=rewardTiers,proto3" json:"reward_tiers,omitempty"`
}

func (x *ContractProperties) Reset() {
	*x = ContractProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractProperties) ProtoMessage() {}

func (x *ContractProperties) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractProperties.ProtoReflect.Descriptor instead.
func (*ContractProperties) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{6}
}

func (x *ContractProperties) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContractProperties) GetEggType() EggType {
	if x != nil {
		return x.EggType
	}
	return EggType_INVALID_EGG
}

func (x *ContractProperties) GetRewards() []*ContractProperties_Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ContractProperties) GetCoopAllowed() bool {
	if x != nil {
		return x.CoopAllowed
	}
	return false
}

func (x *ContractProperties) GetMaxCoopSize() int32 {
	if x != nil {
		return x.MaxCoopSize
	}
	return 0
}

func (x *ContractProperties) GetExpiryTimestamp() float64 {
	if x != nil {
		return x.ExpiryTimestamp
	}
	return 0
}

func (x *ContractProperties) GetDurationSeconds() float64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *ContractProperties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractProperties) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ContractProperties) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *ContractProperties) GetMaxBoosts() int32 {
	if x != nil {
		return x.MaxBoosts
	}
	return 0
}

func (x *ContractProperties) GetMaxSoulEggs() float64 {
	if x != nil {
		return x.MaxSoulEggs
	}
	return 0
}

func (x *ContractProperties) GetMinClientVersion() int32 {
	if x != nil {
		return x.MinClientVersion
	}
	return 0
}

func (x *ContractProperties) GetTokenInterval() float64 {
	if x != nil {
		return x.TokenInterval
	}
	return 0
}

func (x *ContractProperties) GetRewardTiers() []*ContractProperties_RewardTier {
	if x != nil {
		return x.RewardTiers
	}
	return nil
}

// http://www.auxbrain.com/ei/coop_status
type CoopStatusRequestPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Code       string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	PlayerId   string `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *CoopStatusRequestPayload) Reset() {
	*x = CoopStatusRequestPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopStatusRequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopStatusRequestPayload) ProtoMessage() {}

func (x *CoopStatusRequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopStatusRequestPayload.ProtoReflect.Descriptor instead.
func (*CoopStatusRequestPayload) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{7}
}

func (x *CoopStatusRequestPayload) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *CoopStatusRequestPayload) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CoopStatusRequestPayload) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type CoopStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId                     string               `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	EggsLaid                       float64              `protobuf:"fixed64,2,opt,name=eggs_laid,json=eggsLaid,proto3" json:"eggs_laid,omitempty"`
	Code                           string               `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Members                        []*CoopStatus_Member `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	SecondsUntilProductionDeadline float64              `protobuf:"fixed64,5,opt,name=seconds_until_production_deadline,json=secondsUntilProductionDeadline,proto3" json:"seconds_until_production_deadline,omitempty"`
	X6                             int32                `protobuf:"varint,6,opt,name=_6,json=6,proto3" json:"_6,omitempty"` // unknown, maybe bool; example: 0
	SecondsUntilCollectionDeadline float64              `protobuf:"fixed64,7,opt,name=seconds_until_collection_deadline,json=secondsUntilCollectionDeadline,proto3" json:"seconds_until_collection_deadline,omitempty"`
	X8                             int32                `protobuf:"varint,8,opt,name=_8,json=8,proto3" json:"_8,omitempty"` // unknown, maybe bool; example: 0
	CreatorId                      string               `protobuf:"bytes,9,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	X10                            int32                `protobuf:"varint,10,opt,name=_10,json=10,proto3" json:"_10,omitempty"` // unknown, maybe bool; example: 0
}

func (x *CoopStatus) Reset() {
	*x = CoopStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopStatus) ProtoMessage() {}

func (x *CoopStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopStatus.ProtoReflect.Descriptor instead.
func (*CoopStatus) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{8}
}

func (x *CoopStatus) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *CoopStatus) GetEggsLaid() float64 {
	if x != nil {
		return x.EggsLaid
	}
	return 0
}

func (x *CoopStatus) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CoopStatus) GetMembers() []*CoopStatus_Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CoopStatus) GetSecondsUntilProductionDeadline() float64 {
	if x != nil {
		return x.SecondsUntilProductionDeadline
	}
	return 0
}

func (x *CoopStatus) GetX6() int32 {
	if x != nil {
		return x.X6
	}
	return 0
}

func (x *CoopStatus) GetSecondsUntilCollectionDeadline() float64 {
	if x != nil {
		return x.SecondsUntilCollectionDeadline
	}
	return 0
}

func (x *CoopStatus) GetX8() int32 {
	if x != nil {
		return x.X8
	}
	return 0
}

func (x *CoopStatus) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CoopStatus) GetX10() int32 {
	if x != nil {
		return x.X10
	}
	return 0
}

type FirstContact_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string                          `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string                          `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Stats      *FirstContact_Payload_Stats     `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	Progress   *FirstContact_Payload_Progress  `protobuf:"bytes,7,opt,name=progress,proto3" json:"progress,omitempty"`
	Farms      []*Farm                         `protobuf:"bytes,12,rep,name=farms,proto3" json:"farms,omitempty"`
	Contracts  *FirstContact_Payload_Contracts `protobuf:"bytes,13,opt,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *FirstContact_Payload) Reset() {
	*x = FirstContact_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact_Payload) ProtoMessage() {}

func (x *FirstContact_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact_Payload.ProtoReflect.Descriptor instead.
func (*FirstContact_Payload) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FirstContact_Payload) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *FirstContact_Payload) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *FirstContact_Payload) GetStats() *FirstContact_Payload_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *FirstContact_Payload) GetProgress() *FirstContact_Payload_Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *FirstContact_Payload) GetFarms() []*Farm {
	if x != nil {
		return x.Farms
	}
	return nil
}

func (x *FirstContact_Payload) GetContracts() *FirstContact_Payload_Contracts {
	if x != nil {
		return x.Contracts
	}
	return nil
}

type FirstContact_Payload_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DroneTakedowns      int32     `protobuf:"varint,6,opt,name=drone_takedowns,json=droneTakedowns,proto3" json:"drone_takedowns,omitempty"`
	FarmEggsLaid        []float64 `protobuf:"fixed64,8,rep,packed,name=farm_eggs_laid,json=farmEggsLaid,proto3" json:"farm_eggs_laid,omitempty"` // One entry for each egg type.
	Prestiges           int32     `protobuf:"varint,9,opt,name=prestiges,proto3" json:"prestiges,omitempty"`
	EliteDroneTakedowns int32     `protobuf:"varint,10,opt,name=elite_drone_takedowns,json=eliteDroneTakedowns,proto3" json:"elite_drone_takedowns,omitempty"`
	PiggyLevel          int32     `protobuf:"varint,11,opt,name=piggy_level,json=piggyLevel,proto3" json:"piggy_level,omitempty"`
	BoostsUsed          int32     `protobuf:"varint,13,opt,name=boosts_used,json=boostsUsed,proto3" json:"boosts_used,omitempty"`
}

func (x *FirstContact_Payload_Stats) Reset() {
	*x = FirstContact_Payload_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact_Payload_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact_Payload_Stats) ProtoMessage() {}

func (x *FirstContact_Payload_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact_Payload_Stats.ProtoReflect.Descriptor instead.
func (*FirstContact_Payload_Stats) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *FirstContact_Payload_Stats) GetDroneTakedowns() int32 {
	if x != nil {
		return x.DroneTakedowns
	}
	return 0
}

func (x *FirstContact_Payload_Stats) GetFarmEggsLaid() []float64 {
	if x != nil {
		return x.FarmEggsLaid
	}
	return nil
}

func (x *FirstContact_Payload_Stats) GetPrestiges() int32 {
	if x != nil {
		return x.Prestiges
	}
	return 0
}

func (x *FirstContact_Payload_Stats) GetEliteDroneTakedowns() int32 {
	if x != nil {
		return x.EliteDroneTakedowns
	}
	return 0
}

func (x *FirstContact_Payload_Stats) GetPiggyLevel() int32 {
	if x != nil {
		return x.PiggyLevel
	}
	return 0
}

func (x *FirstContact_Payload_Stats) GetBoostsUsed() int32 {
	if x != nil {
		return x.BoostsUsed
	}
	return 0
}

type FirstContact_Payload_Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LifefimeGoldenEggs        int32           `protobuf:"varint,2,opt,name=lifefime_golden_eggs,json=lifefimeGoldenEggs,proto3" json:"lifefime_golden_eggs,omitempty"`
	LifetimeGoldenEggsSpent   int32           `protobuf:"varint,3,opt,name=lifetime_golden_eggs_spent,json=lifetimeGoldenEggsSpent,proto3" json:"lifetime_golden_eggs_spent,omitempty"`
	PrestigeEarnings          float64         `protobuf:"fixed64,5,opt,name=prestige_earnings,json=prestigeEarnings,proto3" json:"prestige_earnings,omitempty"`
	LifetimeEarnings          float64         `protobuf:"fixed64,6,opt,name=lifetime_earnings,json=lifetimeEarnings,proto3" json:"lifetime_earnings,omitempty"`
	PiggyBank                 int32           `protobuf:"varint,7,opt,name=piggy_bank,json=piggyBank,proto3" json:"piggy_bank,omitempty"`
	EpicResearches            []*EpicResearch `protobuf:"bytes,9,rep,name=epic_researches,json=epicResearches,proto3" json:"epic_researches,omitempty"`
	MaxFarmPopulationsReached []int64         `protobuf:"varint,18,rep,packed,name=max_farm_populations_reached,json=maxFarmPopulationsReached,proto3" json:"max_farm_populations_reached,omitempty"` // One entry for
	// each egg type.
	FarmTrophyLevel []TrophyType `protobuf:"varint,19,rep,packed,name=farm_trophy_level,json=farmTrophyLevel,proto3,enum=TrophyType" json:"farm_trophy_level,omitempty"` // One entry for
	// each egg type.
	ProphecyEggs           int32                                  `protobuf:"varint,23,opt,name=prophecy_eggs,json=prophecyEggs,proto3" json:"prophecy_eggs,omitempty"`
	NumDailyGiftsCollected int32                                  `protobuf:"varint,28,opt,name=num_daily_gifts_collected,json=numDailyGiftsCollected,proto3" json:"num_daily_gifts_collected,omitempty"`
	Boosts                 []*FirstContact_Payload_Progress_Boost `protobuf:"bytes,30,rep,name=boosts,proto3" json:"boosts,omitempty"`
	SoulEggs               float64                                `protobuf:"fixed64,34,opt,name=soul_eggs,json=soulEggs,proto3" json:"soul_eggs,omitempty"`
}

func (x *FirstContact_Payload_Progress) Reset() {
	*x = FirstContact_Payload_Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact_Payload_Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact_Payload_Progress) ProtoMessage() {}

func (x *FirstContact_Payload_Progress) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact_Payload_Progress.ProtoReflect.Descriptor instead.
func (*FirstContact_Payload_Progress) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *FirstContact_Payload_Progress) GetLifefimeGoldenEggs() int32 {
	if x != nil {
		return x.LifefimeGoldenEggs
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetLifetimeGoldenEggsSpent() int32 {
	if x != nil {
		return x.LifetimeGoldenEggsSpent
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetPrestigeEarnings() float64 {
	if x != nil {
		return x.PrestigeEarnings
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetLifetimeEarnings() float64 {
	if x != nil {
		return x.LifetimeEarnings
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetPiggyBank() int32 {
	if x != nil {
		return x.PiggyBank
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetEpicResearches() []*EpicResearch {
	if x != nil {
		return x.EpicResearches
	}
	return nil
}

func (x *FirstContact_Payload_Progress) GetMaxFarmPopulationsReached() []int64 {
	if x != nil {
		return x.MaxFarmPopulationsReached
	}
	return nil
}

func (x *FirstContact_Payload_Progress) GetFarmTrophyLevel() []TrophyType {
	if x != nil {
		return x.FarmTrophyLevel
	}
	return nil
}

func (x *FirstContact_Payload_Progress) GetProphecyEggs() int32 {
	if x != nil {
		return x.ProphecyEggs
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetNumDailyGiftsCollected() int32 {
	if x != nil {
		return x.NumDailyGiftsCollected
	}
	return 0
}

func (x *FirstContact_Payload_Progress) GetBoosts() []*FirstContact_Payload_Progress_Boost {
	if x != nil {
		return x.Boosts
	}
	return nil
}

func (x *FirstContact_Payload_Progress) GetSoulEggs() float64 {
	if x != nil {
		return x.SoulEggs
	}
	return 0
}

type FirstContact_Payload_Contracts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveContracts    []*Contract   `protobuf:"bytes,1,rep,name=active_contracts,json=activeContracts,proto3" json:"active_contracts,omitempty"`
	PastContracts      []*Contract   `protobuf:"bytes,2,rep,name=past_contracts,json=pastContracts,proto3" json:"past_contracts,omitempty"`
	ContractIds        []string      `protobuf:"bytes,3,rep,name=contract_ids,json=contractIds,proto3" json:"contract_ids,omitempty"`
	ActiveCoopStatuses []*CoopStatus `protobuf:"bytes,4,rep,name=active_coop_statuses,json=activeCoopStatuses,proto3" json:"active_coop_statuses,omitempty"`
}

func (x *FirstContact_Payload_Contracts) Reset() {
	*x = FirstContact_Payload_Contracts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact_Payload_Contracts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact_Payload_Contracts) ProtoMessage() {}

func (x *FirstContact_Payload_Contracts) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact_Payload_Contracts.ProtoReflect.Descriptor instead.
func (*FirstContact_Payload_Contracts) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *FirstContact_Payload_Contracts) GetActiveContracts() []*Contract {
	if x != nil {
		return x.ActiveContracts
	}
	return nil
}

func (x *FirstContact_Payload_Contracts) GetPastContracts() []*Contract {
	if x != nil {
		return x.PastContracts
	}
	return nil
}

func (x *FirstContact_Payload_Contracts) GetContractIds() []string {
	if x != nil {
		return x.ContractIds
	}
	return nil
}

func (x *FirstContact_Payload_Contracts) GetActiveCoopStatuses() []*CoopStatus {
	if x != nil {
		return x.ActiveCoopStatuses
	}
	return nil
}

type FirstContact_Payload_Progress_Boost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FirstContact_Payload_Progress_Boost) Reset() {
	*x = FirstContact_Payload_Progress_Boost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstContact_Payload_Progress_Boost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstContact_Payload_Progress_Boost) ProtoMessage() {}

func (x *FirstContact_Payload_Progress_Boost) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstContact_Payload_Progress_Boost.ProtoReflect.Descriptor instead.
func (*FirstContact_Payload_Progress_Boost) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{1, 0, 1, 0}
}

func (x *FirstContact_Payload_Progress_Boost) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FirstContact_Payload_Progress_Boost) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ContractProperties_Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X1    int32      `protobuf:"varint,1,opt,name=_1,json=1,proto3" json:"_1,omitempty"`
	Goal  float64    `protobuf:"fixed64,2,opt,name=goal,proto3" json:"goal,omitempty"`
	Type  RewardType `protobuf:"varint,3,opt,name=type,proto3,enum=RewardType" json:"type,omitempty"`
	Name  string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Count float64    `protobuf:"fixed64,5,opt,name=count,proto3" json:"count,omitempty"`
	X6    float64    `protobuf:"fixed64,6,opt,name=_6,json=6,proto3" json:"_6,omitempty"` // unknown; maybe a difficulty indicator?
}

func (x *ContractProperties_Reward) Reset() {
	*x = ContractProperties_Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractProperties_Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractProperties_Reward) ProtoMessage() {}

func (x *ContractProperties_Reward) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractProperties_Reward.ProtoReflect.Descriptor instead.
func (*ContractProperties_Reward) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ContractProperties_Reward) GetX1() int32 {
	if x != nil {
		return x.X1
	}
	return 0
}

func (x *ContractProperties_Reward) GetGoal() float64 {
	if x != nil {
		return x.Goal
	}
	return 0
}

func (x *ContractProperties_Reward) GetType() RewardType {
	if x != nil {
		return x.Type
	}
	return RewardType_INVALID_REWARD
}

func (x *ContractProperties_Reward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractProperties_Reward) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ContractProperties_Reward) GetX6() float64 {
	if x != nil {
		return x.X6
	}
	return 0
}

type ContractProperties_RewardTier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*ContractProperties_Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *ContractProperties_RewardTier) Reset() {
	*x = ContractProperties_RewardTier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractProperties_RewardTier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractProperties_RewardTier) ProtoMessage() {}

func (x *ContractProperties_RewardTier) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractProperties_RewardTier.ProtoReflect.Descriptor instead.
func (*ContractProperties_RewardTier) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ContractProperties_RewardTier) GetRewards() []*ContractProperties_Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type CoopStatus_Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EggsLaid float64 `protobuf:"fixed64,3,opt,name=eggs_laid,json=eggsLaid,proto3" json:"eggs_laid,omitempty"`
	Active   bool    `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"` // "snoozers" who haven't reported in in 24 hours
	// have this field set to false
	X5              int32   `protobuf:"varint,5,opt,name=_5,json=5,proto3" json:"_5,omitempty"` // unknown; example: 1 or 2
	EggsPerSecond   float64 `protobuf:"fixed64,6,opt,name=eggs_per_second,json=eggsPerSecond,proto3" json:"eggs_per_second,omitempty"`
	X7              int32   `protobuf:"varint,7,opt,name=_7,json=7,proto3" json:"_7,omitempty"`                                               // unknown; example: 7
	EarningBonusOom float64 `protobuf:"fixed64,11,opt,name=earning_bonus_oom,json=earningBonusOom,proto3" json:"earning_bonus_oom,omitempty"` // EB is 10^(earning_bonus_oom + 2)%
	Tokens          int32   `protobuf:"varint,12,opt,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *CoopStatus_Member) Reset() {
	*x = CoopStatus_Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_egginc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopStatus_Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopStatus_Member) ProtoMessage() {}

func (x *CoopStatus_Member) ProtoReflect() protoreflect.Message {
	mi := &file_api_egginc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopStatus_Member.ProtoReflect.Descriptor instead.
func (*CoopStatus_Member) Descriptor() ([]byte, []int) {
	return file_api_egginc_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CoopStatus_Member) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CoopStatus_Member) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoopStatus_Member) GetEggsLaid() float64 {
	if x != nil {
		return x.EggsLaid
	}
	return 0
}

func (x *CoopStatus_Member) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CoopStatus_Member) GetX5() int32 {
	if x != nil {
		return x.X5
	}
	return 0
}

func (x *CoopStatus_Member) GetEggsPerSecond() float64 {
	if x != nil {
		return x.EggsPerSecond
	}
	return 0
}

func (x *CoopStatus_Member) GetX7() int32 {
	if x != nil {
		return x.X7
	}
	return 0
}

func (x *CoopStatus_Member) GetEarningBonusOom() float64 {
	if x != nil {
		return x.EarningBonusOom
	}
	return 0
}

func (x *CoopStatus_Member) GetTokens() int32 {
	if x != nil {
		return x.Tokens
	}
	return 0
}

var File_api_egginc_proto protoreflect.FileDescriptor

var file_api_egginc_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x67, 0x67, 0x69, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x1a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x33, 0x22, 0xa4, 0x0b, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0xe8, 0x0a, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x61, 0x72, 0x6d,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x52, 0x05,
	0x66, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x1a, 0xea, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x6f, 0x77, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x54, 0x61,
	0x6b, 0x65, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x72, 0x6d, 0x5f,
	0x65, 0x67, 0x67, 0x73, 0x5f, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x0c, 0x66, 0x61, 0x72, 0x6d, 0x45, 0x67, 0x67, 0x73, 0x4c, 0x61, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x6c, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x6c, 0x69, 0x74,
	0x65, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x67, 0x67, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x69, 0x67, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x55, 0x73, 0x65,
	0x64, 0x1a, 0x8e, 0x05, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x6c, 0x69, 0x66, 0x65, 0x66, 0x69, 0x6d, 0x65, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x65,
	0x6e, 0x5f, 0x65, 0x67, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6c, 0x69,
	0x66, 0x65, 0x66, 0x69, 0x6d, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x45, 0x67, 0x67, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x67, 0x6f, 0x6c,
	0x64, 0x65, 0x6e, 0x5f, 0x65, 0x67, 0x67, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x47, 0x6f,
	0x6c, 0x64, 0x65, 0x6e, 0x45, 0x67, 0x67, 0x73, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69,
	0x67, 0x65, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x69,
	0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x67, 0x67, 0x79,
	0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x69, 0x67,
	0x67, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x0f, 0x65, 0x70, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x45, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0e,
	0x65, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x1c, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x61, 0x72, 0x6d, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x19, 0x6d, 0x61, 0x78, 0x46, 0x61, 0x72, 0x6d, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12,
	0x37, 0x0a, 0x11, 0x66, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x66, 0x61, 0x72, 0x6d, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70,
	0x68, 0x65, 0x63, 0x79, 0x5f, 0x65, 0x67, 0x67, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63, 0x79, 0x45, 0x67, 0x67, 0x73, 0x12, 0x39, 0x0a,
	0x19, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x16, 0x6e, 0x75, 0x6d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x69, 0x66, 0x74, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x52, 0x06,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x65,
	0x67, 0x67, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x6c, 0x45,
	0x67, 0x67, 0x73, 0x1a, 0x2d, 0x0a, 0x05, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0xd5, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x34, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x14, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6f, 0x6f, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0xf9, 0x03, 0x0a, 0x04, 0x46,
	0x61, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x67, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x45, 0x67, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x65, 0x67, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73,
	0x74, 0x69, 0x67, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x45, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x33, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x76,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x63, 0x6b, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x63,
	0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x67, 0x67, 0x73,
	0x5f, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x67, 0x67,
	0x73, 0x4c, 0x61, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x67, 0x67, 0x73, 0x5f, 0x70, 0x61,
	0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x67,
	0x67, 0x73, 0x50, 0x61, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x69, 0x6c, 0x6f, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61,
	0x62, 0x69, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0c, 0x68, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x13, 0x68, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x68, 0x61,
	0x62, 0x69, 0x74, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x34, 0x0a, 0x0c, 0x45, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xaa,
	0x03, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x34, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x0d, 0x0a, 0x02, 0x5f,
	0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x37, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0f, 0x0a, 0x03, 0x5f,
	0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x31, 0x30, 0x12, 0x2f, 0x0a, 0x13,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x75,
	0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x47, 0x6f, 0x61, 0x6c,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x31,
	0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x31, 0x35, 0x22, 0x8f, 0x06, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x67, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x45, 0x67, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x65, 0x67, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6f, 0x70,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x42,
	0x6f, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6f, 0x75,
	0x6c, 0x5f, 0x65, 0x67, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x53, 0x6f, 0x75, 0x6c, 0x45, 0x67, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x65, 0x72,
	0x73, 0x1a, 0x85, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x0a, 0x02,
	0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x36,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x36, 0x1a, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x6c, 0x0a,
	0x18, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x04, 0x0a, 0x0a,
	0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x67, 0x67, 0x73, 0x5f, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x65, 0x67, 0x67, 0x73, 0x4c, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x21, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x36, 0x12, 0x49, 0x0a, 0x21, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x1e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x0d, 0x0a, 0x02, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x38, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0f, 0x0a,
	0x03, 0x5f, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x31, 0x30, 0x1a, 0xeb,
	0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x67, 0x67, 0x73, 0x5f, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x65, 0x67, 0x67, 0x73, 0x4c, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x35, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x67, 0x67, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x67, 0x67, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x02, 0x5f, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x37, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x6f, 0x6f, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x4f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2a, 0x83, 0x03, 0x0a,
	0x07, 0x45, 0x67, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x44, 0x49,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x50, 0x45, 0x52, 0x46, 0x4f,
	0x4f, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x45, 0x44, 0x49, 0x43, 0x41, 0x4c, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x55, 0x45, 0x4c,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x55, 0x50, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x54, 0x45,
	0x52, 0x49, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x10, 0x07, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x4d, 0x4f, 0x52, 0x54, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x08,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x41, 0x43, 0x48, 0x59, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0c, 0x0a,
	0x08, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x49, 0x4c, 0x49, 0x54, 0x48, 0x49, 0x55, 0x4d, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52,
	0x4f, 0x44, 0x49, 0x47, 0x59, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x52, 0x52, 0x41,
	0x46, 0x4f, 0x52, 0x4d, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x4e, 0x54, 0x49, 0x4d, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x10, 0x0e, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x52, 0x4b, 0x5f, 0x4d,
	0x41, 0x54, 0x54, 0x45, 0x52, 0x10, 0x0f, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x49, 0x10, 0x10, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x45, 0x42, 0x55, 0x4c, 0x41, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x12, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4e, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x45, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x48, 0x4f, 0x43, 0x4f, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x45,
	0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x41, 0x54, 0x45, 0x52,
	0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x4f, 0x4e, 0x10, 0x66, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x52,
	0x45, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x4d, 0x50, 0x4b,
	0x49, 0x4e, 0x10, 0x68, 0x12, 0x0c, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0xe8, 0x07, 0x2a, 0x58, 0x0a, 0x0a, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x54, 0x52, 0x4f, 0x50, 0x48, 0x59, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x42, 0x52, 0x4f, 0x4e, 0x5a, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x49, 0x4c, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4f, 0x4c, 0x44, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x54, 0x49, 0x4e, 0x55, 0x4d, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x10, 0x05, 0x2a, 0xac, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x47, 0x4f, 0x4c, 0x44, 0x45, 0x4e, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x52, 0x4f, 0x50, 0x48, 0x45, 0x43, 0x59, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x45, 0x50, 0x49, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x49, 0x47, 0x47, 0x59, 0x5f, 0x47, 0x4f, 0x4c, 0x44,
	0x45, 0x4e, 0x5f, 0x45, 0x47, 0x47, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x49, 0x47, 0x47,
	0x59, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x59, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x49, 0x47, 0x47, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x10, 0x08,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x10, 0x09, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x61, 0x6e, 0x61, 0x74, 0x69,
	0x63, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x45, 0x67, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_egginc_proto_rawDescOnce sync.Once
	file_api_egginc_proto_rawDescData = file_api_egginc_proto_rawDesc
)

func file_api_egginc_proto_rawDescGZIP() []byte {
	file_api_egginc_proto_rawDescOnce.Do(func() {
		file_api_egginc_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_egginc_proto_rawDescData)
	})
	return file_api_egginc_proto_rawDescData
}

var (
	file_api_egginc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
	file_api_egginc_proto_msgTypes  = make([]protoimpl.MessageInfo, 17)
	file_api_egginc_proto_goTypes   = []interface{}{
		(EggType)(0),                                // 0: EggType
		(TrophyType)(0),                             // 1: TrophyType
		(RewardType)(0),                             // 2: RewardType
		(*FirstContactRequestPayload)(nil),          // 3: FirstContactRequestPayload
		(*FirstContact)(nil),                        // 4: FirstContact
		(*Farm)(nil),                                // 5: Farm
		(*Research)(nil),                            // 6: Research
		(*EpicResearch)(nil),                        // 7: EpicResearch
		(*Contract)(nil),                            // 8: Contract
		(*ContractProperties)(nil),                  // 9: ContractProperties
		(*CoopStatusRequestPayload)(nil),            // 10: CoopStatusRequestPayload
		(*CoopStatus)(nil),                          // 11: CoopStatus
		(*FirstContact_Payload)(nil),                // 12: FirstContact.Payload
		(*FirstContact_Payload_Stats)(nil),          // 13: FirstContact.Payload.Stats
		(*FirstContact_Payload_Progress)(nil),       // 14: FirstContact.Payload.Progress
		(*FirstContact_Payload_Contracts)(nil),      // 15: FirstContact.Payload.Contracts
		(*FirstContact_Payload_Progress_Boost)(nil), // 16: FirstContact.Payload.Progress.Boost
		(*ContractProperties_Reward)(nil),           // 17: ContractProperties.Reward
		(*ContractProperties_RewardTier)(nil),       // 18: ContractProperties.RewardTier
		(*CoopStatus_Member)(nil),                   // 19: CoopStatus.Member
	}
)

var file_api_egginc_proto_depIdxs = []int32{
	12, // 0: FirstContact.data:type_name -> FirstContact.Payload
	0,  // 1: Farm.egg_type:type_name -> EggType
	6,  // 2: Farm.researches:type_name -> Research
	9,  // 3: Contract.props:type_name -> ContractProperties
	0,  // 4: ContractProperties.egg_type:type_name -> EggType
	17, // 5: ContractProperties.rewards:type_name -> ContractProperties.Reward
	18, // 6: ContractProperties.reward_tiers:type_name -> ContractProperties.RewardTier
	19, // 7: CoopStatus.members:type_name -> CoopStatus.Member
	13, // 8: FirstContact.Payload.stats:type_name -> FirstContact.Payload.Stats
	14, // 9: FirstContact.Payload.progress:type_name -> FirstContact.Payload.Progress
	5,  // 10: FirstContact.Payload.farms:type_name -> Farm
	15, // 11: FirstContact.Payload.contracts:type_name -> FirstContact.Payload.Contracts
	7,  // 12: FirstContact.Payload.Progress.epic_researches:type_name -> EpicResearch
	1,  // 13: FirstContact.Payload.Progress.farm_trophy_level:type_name -> TrophyType
	16, // 14: FirstContact.Payload.Progress.boosts:type_name -> FirstContact.Payload.Progress.Boost
	8,  // 15: FirstContact.Payload.Contracts.active_contracts:type_name -> Contract
	8,  // 16: FirstContact.Payload.Contracts.past_contracts:type_name -> Contract
	11, // 17: FirstContact.Payload.Contracts.active_coop_statuses:type_name -> CoopStatus
	2,  // 18: ContractProperties.Reward.type:type_name -> RewardType
	17, // 19: ContractProperties.RewardTier.rewards:type_name -> ContractProperties.Reward
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_egginc_proto_init() }
func file_api_egginc_proto_init() {
	if File_api_egginc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_egginc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContactRequestPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Farm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Research); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpicResearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopStatusRequestPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact_Payload_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact_Payload_Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact_Payload_Contracts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstContact_Payload_Progress_Boost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractProperties_Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractProperties_RewardTier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_egginc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopStatus_Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_egginc_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_egginc_proto_goTypes,
		DependencyIndexes: file_api_egginc_proto_depIdxs,
		EnumInfos:         file_api_egginc_proto_enumTypes,
		MessageInfos:      file_api_egginc_proto_msgTypes,
	}.Build()
	File_api_egginc_proto = out.File
	file_api_egginc_proto_rawDesc = nil
	file_api_egginc_proto_goTypes = nil
	file_api_egginc_proto_depIdxs = nil
}
